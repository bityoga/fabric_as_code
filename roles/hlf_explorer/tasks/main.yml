# ---
# Stop all hlf-explorer services
- name: Stop Explorer Service - {{ item.name }}
  become: yes
  docker_swarm_service:
    name: "{{item.name}}"
    state: absent
    networks:
      - "{{swarm_network}}"
  loop:
    - "{{hlf_explorer}}"
    - "{{hlf_explorer_db}}"
  when: hlf_explorer.switch == "on" and inventory_hostname in groups.swarm_manager_prime

  # We create relevent folder structure in the mount locally for services
- name: Clean hlf-explorer config files folders , if they exists
  become: yes
  file:
    path: "/root/hlf-explorer/"
    state: absent
  when: hlf_explorer.switch == "on"

- name: Copy hlf explorer config file and folder structure
  become: yes
  copy:
    src: "hlf-explorer"
    dest: "/root"
    mode: "0750"
    force: yes
  when: hlf_explorer.switch == "on"

# We create relevent folder structure in the mount locally for services

- name: Template copy hlf explorer config json file
  become: yes
  template:
    src: "hlf_explorer/hlf-explorer-config.json"
    dest: "/root/hlf-explorer/config.json"
    mode: "0750"
    force: yes
  when: hlf_explorer.switch == "on"

- name: Template Copy hlf explorer network connection profile json file
  become: yes
  template:
    src: "hlf_explorer/hlf-explorer-network.json"
    dest: "/root/hlf-explorer/connection-profile/hlf-explorer-network.json"
    mode: "0750"
    force: yes
  when: hlf_explorer.switch == "on"

- name: Template Copy hlf explorer docker-compose.yaml file
  become: yes
  template:
    src: "hlf_explorer/hlf-explorer-docker-compose.yaml"
    dest: "/root/hlf-explorer/hlf-explorer-docker-compose.yaml"
    mode: "0750"
    force: yes
  when: hlf_explorer.switch == "on"


- name: Register admin secret key name 
  become: yes
  shell: ls -tr /root/hlft-store/orgca/admin1/msp/keystore/*_sk | tail -1
  register: admin_secret_key_file

- name: Copy and Rename admin secret key '*_sk' file to a common name "admin_sk.key" which is specified in connection profile
  become: yes
  copy:
    mode: "0750"
    force: yes
    src: "{{ item }}"
    dest: "/root/hlft-store/orgca/admin1/msp/keystore/admin_sk.key"
    remote_src: yes
  with_items: "{{admin_secret_key_file.stdout_lines}}"
  when: hlf_explorer.switch == "on"

- name: Remove {{hlf_explorer_db.volume}} volume
  become: yes
  docker_volume:
    name: "{{hlf_explorer_db.volume}}"
    state: absent

- name: Remove {{hlf_explorer.volume}} volume
  become: yes
  docker_volume:
    name: "{{hlf_explorer.volume}}"
    state: absent

- name: Create {{hlf_explorer_db.volume}} volume
  become: yes
  docker_volume:
    name: "{{hlf_explorer_db.volume}}"

- name: Create {{hlf_explorer.volume}} volume
  become: yes
  docker_volume:
    name: "{{hlf_explorer.volume}}"

- name: Hlf-Explorer db Service
  become: yes
  docker_swarm_service:
    name: "{{hlf_explorer_db.name}}"
    hostname: "{{hlf_explorer_db.name}}"
    limits:
      cpus: 0.25
      memory: 200M
    reservations:
      cpus: 0.15
      memory: 100M
    networks:
      - "{{swarm_network}}"
    image: "{{hlf_explorer_db.image}}:{{hlf_explorer_db.tag}}"
    healthcheck:
      # If this fails or timeouts, the healthcheck fails.
      test: "pg_isready -h localhost -p {{hlf_explorer_db.port}} -q -U postgres"
      interval: 30s
      timeout: 10s
      retries: 5

    mode: replicated
    replicas: "{{hlf_explorer_db.replicas}}"
    mounts:
      - source: "{{hlf_explorer.volume}}"
        target: "/var/lib/postgresql/data"
        type: volume

    publish:
      - published_port: "{{hlf_explorer_db.port}}"
        target_port: "5432"
        protocol: "tcp"

    env:
      - "DATABASE_DATABASE={{hlf_explorer_db.db_name}}"
      - "DATABASE_USERNAME={{hlf_explorer_db.db_user_name}}"
      - "DATABASE_PASSWORD={{hlf_explorer_db.db_password}}"
    force_update: yes
    debug: yes
  when: hlf_explorer_db.switch == "on" and inventory_hostname in groups.swarm_manager_prime

  # Create & Start hlf_explorer service
  # Containers are placed in the managers
- name: Hlf-Explorer Service
  become: yes
  docker_swarm_service:
    name: "{{hlf_explorer.name}}"
    hostname: "{{hlf_explorer.name}}"
    limits:
      cpus: 0.25
      memory: 200M
    reservations:
      cpus: 0.15
      memory: 100M
    networks:
      - "{{swarm_network}}"
    image: "{{hlf_explorer.image}}:{{hlf_explorer.tag}}"
    # command: sh -c "node /opt/explorer/main.js && tail -f /dev/null"

    mode: replicated
    replicas: "{{hlf_explorer.replicas}}"
    mounts:
      - source: "/root/hlf-explorer/config.json"
        target: "/opt/explorer/app/platform/fabric/config.json"
        type: bind
      # - source: "/root/hlf-explorer/PgService.js"
      #   target: "/opt/explorer/app/persistence/postgreSQL/PgService.js"
      #   type: bind
      - source: "/root/hlf-explorer/connection-profile"
        target: "/opt/explorer/app/platform/fabric/connection-profile"
        type: bind
      - source: "/root/hlft-store"
        target: "/tmp/crypto"
        type: bind

      - source: "{{hlf_explorer.volume}}"
        target: "/opt/wallet"
        type: volume

    publish:
      - published_port: "{{hlf_explorer.port}}"
        target_port: "8080"
        protocol: "tcp"
    env:
      - "DATABASE_HOST={{hlf_explorer_db.name}}"
      - "DATABASE_DATABASE={{hlf_explorer_db.db_name}}"
      - "DATABASE_USERNAME={{hlf_explorer_db.db_user_name}}"
      - "DATABASE_PASSWD={{hlf_explorer_db.db_password}}"
      - "LOG_LEVEL_APP=debug"
      - "LOG_LEVEL_DB=debug"
      - "LOG_LEVEL_CONSOLE=info"
      - "LOG_CONSOLE_STDOUT=true"
      - "DISCOVERY_AS_LOCALHOST=false"
      - "SSL_ENABLED=true"

    force_update: yes
  when: hlf_explorer.switch == "on" and inventory_hostname in groups.swarm_manager_prime