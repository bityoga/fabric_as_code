# ---
# Stop all Rest Api services
- name: Stop Rest Api  Service - {{ item.name }}
  become: yes
  docker_swarm_service:
    name: "{{item.name}}"
    state: absent
    networks:
      - "{{swarm_network}}"
  loop:
    - "{{rest_api}}"
  when: rest_api.switch == "on" and inventory_hostname in groups.swarm_manager_prime

  # Clean  rest-api files folders , if they exists
- name: Clean  rest-api files folders , if they exists
  become: yes
  file:
    path: "/root/hlft-store/fabric_as_code_restapi/"
    state: absent
  when: rest_api.switch == "on"

  # git clone  rest-api files
- name: Git clone  rest-api files
  become: yes
  shell: git clone {{rest_api.git_repository}} /root/hlft-store/fabric_as_code_restapi

  # We create wallet directory to store the rest api admin user certificate
- name: Create wallet directory for rest api
  become: yes
  file:
    path: "/root/hlft-store/fabric_as_code_restapi/wallet"
    state: directory
    mode: "0775"
  when: rest_api.switch == "on"

  # Copy orderer tls certificate to Rest Api folder
- name: Copy orderer certificate to Rest Api folder
  become: yes
  shell: cp /root/hlft-store/{{orgca.name}}/{{orderer.name}}/msp/tls/ca.crt /root/hlft-store/fabric_as_code_restapi/fabric_node_sdk_helper/hlft-store/{{orderer.name}}/tls-msp/tlscacerts/ca.crt

  # Copy peer2 tls certificate to Rest Api folder
- name: Copy peer2 certificate to Rest Api folder
  become: yes
  shell: cp /root/hlft-store/{{orgca.name}}/{{peer2.name}}/msp/tls/ca.crt /root/hlft-store/fabric_as_code_restapi/fabric_node_sdk_helper/hlft-store/{{peer2.name}}/tls-msp/tlscacerts/ca.crt

  # Https support certificates starts here
  # Copy ORG_ADMIN_CA_CERT_FILE certificate to Rest Api folder
- name: Copy ORG_ADMIN_CA_CERT_FILE certificate to Rest Api folder
  become: yes
  shell: cp /root/hlft-store/{{orgca.name}}/{{admin_user}}/msp/cacerts/orgca-7054.pem /root/hlft-store/fabric_as_code_restapi/fabric_node_sdk_helper/hlft-store/{{orgca.name}}/{{admin_user}}/msp/cacerts/orgca-7054.pem

  # Copy ORG_ADMIN_CERT_FILE certificate to Rest Api folder
- name: Copy ORG_ADMIN_CERT_FILE certificate to Rest Api folder
  become: yes
  shell: cp /root/hlft-store/{{orgca.name}}/{{admin_user}}/msp/signcerts/cert.pem /root/hlft-store/fabric_as_code_restapi/fabric_node_sdk_helper/hlft-store/{{orgca.name}}/{{admin_user}}/msp/signcerts/cert.pem

  # Copy ORG_ADMIN_KEY_FILE certificate to Rest Api folder
- name: Copy ORG_ADMIN_KEY_FILE  to Rest Api folder
  become: yes
  shell: cp -p "`ls -dtr1 "/root/hlft-store/{{orgca.name}}/{{admin_user}}/msp/keystore"/* | tail -1`" "/root/hlft-store/{{orgca.name}}/{{admin_user}}/msp/keystore/server.key"
# Https support certificates ends here

# Template copy Rest Api config.json file
- name: Template copy Rest Api config.json file
  become: yes
  template:
    src: "rest_api_config.json"
    dest: "/root/hlft-store/fabric_as_code_restapi/api_config.json"
    mode: "0750"
    force: yes
  when: rest_api.switch == "on"

# Template copy Rest Api network_config.json file
- name: Template copy Rest Api network_config.json file
  become: yes
  template:
    src: "rest_api_network_profile.json"
    dest: "/root/hlft-store/fabric_as_code_restapi/fabric_node_sdk_helper/network_profile.json"
    mode: "0750"
    force: yes
  when: rest_api.switch == "on"

  # Build Docker Image
- name: Build Docker Image for Rest Api
  become: yes
  shell: cd /root/hlft-store/fabric_as_code_restapi && bash build_docker_image.sh
  ignore_errors: yes

  # Run as docker service with replicas
# - name: Run as docker service with replicas
#   become: yes
#   shell: docker service create --name rest-api-service --replicas 1 -p {{rest_api.port}}:{{rest_api.port}} rest-api:latest

# Run as docker service with replicas
- name: Rest Api Docker Service
  become: yes
  docker_swarm_service:
    name: "{{rest_api.name}}"
    hostname: "{{rest_api.name}}"
    networks:
      - "{{swarm_network}}"
    image: "{{rest_api.image}}:{{rest_api.tag}}"
    mode: replicated
    replicas: "{{rest_api.replicas}}"
    mounts:
      - source: "/root/hlft-store/fabric_as_code_restapi/wallet"
        target: "/app/wallet"
        type: bind
    publish:
      - published_port: "{{rest_api.port}}"
        target_port: "{{rest_api.port}}"
        protocol: "tcp"
    force_update: yes
  when: rest_api.switch == "on" and inventory_hostname in groups.swarm_manager_prime
